{"version":3,"sources":["context/TodoContext.js","components/AddTodo.js","components/TodoItem.js","pages/Home.jsx","App.js","reportWebVitals.js","context/TodoProvider.js","index.js"],"names":["TodoContext","createContext","AddTodo","useContext","todoText","setTodoText","createList","color","as","marginTop","textAlign","mt","placeholder","marginRight","maxW","size","value","onChange","e","target","icon","colorScheme","variant","length","disabled","onClick","TodoItem","todo","index","editItem","removeItem","className","padding","boxShadow","d","id","key","text","type","Home","todoList","useColorMode","colorMode","toggleColorMode","isRound","position","right","bottom","alignSelf","spacing","w","undefined","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Provider","children","useState","setTodoList","contextValue","uuidv4","filter","item","window","prompt","state","itemsFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e59714a.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst TodoContext = createContext();\n\nexport default TodoContext;","import React, { useContext } from 'react';\nimport {IconButton, Input,  Center, HStack } from \"@chakra-ui/react\"\nimport { AddIcon } from '@chakra-ui/icons'\nimport { Button, ButtonGroup } from \"@chakra-ui/react\"\nimport { Heading } from \"@chakra-ui/react\"\nimport TodoContext from \"../context/TodoContext\";\n\nfunction AddTodo() {\n  const { todoText, setTodoText, createList } = useContext(TodoContext);\n\n  return (\n    <Center>\n      <form>\n          <Heading\n            color=\"\"\n            as=\"h3\"\n            marginTop=\"1.5rem\"\n            textAlign=\"center\"\n          >\n            Todo App\n          </Heading>\n          <HStack mt='5'>\n            <Input\n              placeholder=\"Add your new todo...\"\n              marginRight=\"5px\"\n              maxW=\"230px\"\n              size=\"md\"\n              value={todoText}\n              onChange={(e) => (setTodoText(e.target.value))}\n            />\n        <IconButton\n          icon={<AddIcon />}\n          colorScheme=\"green\"\n          variant={ todoText.length > 3 ? \"solid\" : \"outline\" }\n          disabled={ todoText.length > 3 ? false : true }\n          onClick={() => createList()}\n        >\n          Adicionar tarefa\n        </IconButton>\n      </HStack>\n    </form>\n</Center>\n);\n}\n\nexport default AddTodo;\n","import React, {useContext} from 'react';\nimport {Center, IconButton, Text, ListItem, Checkbox, Box} from \"@chakra-ui/react\";\nimport { EditIcon, DeleteIcon, ArrowUpIcon, ArrowDownIcon } from '@chakra-ui/icons'\nimport TodoContext from \"../context/TodoContext\";\n\nfunction TodoItem({ todo, index }) {\n  const { editItem, removeItem } = useContext(TodoContext);\n  return (\n      <Box className=\"todo\" key={ todo.key } padding=\"10px\" boxShadow=\"base\">\n        <Box d=\"flex\">\n          <Checkbox id={`todo-${todo.key}`} />\n          <Text>\n            { todo.text }\n          </Text>\n          <Box>\n            <IconButton\n              colorScheme=\"blue\"\n              icon={ <EditIcon /> }\n              marginRight=\"5px\"\n              type={\"button\"}\n              onClick={ () => editItem(todo.key, index) }\n            >\n              Editar\n            </IconButton>\n            <IconButton\n              colorScheme=\"red\"\n              icon={ <DeleteIcon /> }\n              marginRight=\"5px\"\n              type=\"button\"\n              onClick={() => removeItem(todo.key, index)}\n            >\n              Remover tarefa\n            </IconButton>\n          </Box>\n        </Box>\n      </Box>\n  );\n}\n\nexport default TodoItem;\n","import React, {useState, useContext} from 'react';\nimport { Box, HStack, StackDivider, IconButton, useColorMode } from \"@chakra-ui/react\"\nimport { FaSun, FaMoon } from 'react-icons/fa';\nimport AddTodo from \"../components/AddTodo\";\nimport TodoItem from \"../components/TodoItem\";\nimport TodoContext from \"../context/TodoContext\";\n\nfunction Home() {\n  const { todoList } = useContext(TodoContext);\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <section>\n      <IconButton\n        icon={colorMode === 'light' ? <FaSun /> : <FaMoon />}\n        isRound='true'\n        size='lg'\n        position=\"fixed\"\n        right=\"1rem\"\n        bottom=\"1rem\"\n        alignSelf='flex-end'\n        onClick={toggleColorMode}\n      />\n      <AddTodo />\n      <Box spacing={1} w=\"100%\">\n        { todoList !== undefined && todoList.map((todo, index) => (\n          <HStack key={todo.key}>\n          <TodoItem\n          key={ todo.key }\n          todo={ todo }\n          index={ index }\n          />\n          </HStack>\n        ))}\n      </Box>\n    </section>\n  );\n}\n\nexport default Home;\n","import Home from './pages/Home';\n\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Home />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport TodoContext from './TodoContext';\nimport {v4 as uuidv4} from \"uuid\";\n\nfunction Provider({ children }) {\n  const [todoText, setTodoText] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  const createList = () => {\n    const key = uuidv4();\n    setTodoList( [ ...todoList, {\n      key, text: todoText\n    }])\n    setTodoText('');\n  }\n\n  const removeItem = (key) => {\n    const itemsFilter = todoList.filter((todo) => todo.key !== key);\n    setTodoList(itemsFilter);\n  }\n\n  const editItem = (key, index) => {\n    const obj = todoList.filter((item) => item.key === key);\n    obj[0].text = window.prompt();\n\n    setTodoList(state => {\n      return [\n        ...state,\n      ];\n    });\n  }\n\n  const contextValue = {\n    setTodoText,\n    todoText,\n    setTodoList,\n    todoList,\n    createList,\n    editItem,\n    removeItem\n  };\n\n  return (\n    <TodoContext.Provider value={contextValue}>\n      { children }\n    </TodoContext.Provider>\n  );\n}\n\nexport default Provider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Provider from \"./context/TodoProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}